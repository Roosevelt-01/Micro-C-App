<?xml version="1.0" encoding="utf-8" ?>
<Application xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:micro_c_app"
             x:Class="micro_c_app.App">
    <!--
        Define global resources and styles here, that apply to all pages in your app.
    -->
    <Application.Resources>
        <!--<ResourceDictionary Source="Themes/DarkTheme.xaml"/>-->
        <ResourceDictionary x:Name="IOS">
            <Style TargetType="Entry">
                <Setter Property="PlaceholderColor" Value="{DynamicResource SecondaryTextColor}"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="TextColor" Value="{DynamicResource IOSEntryTextColor}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
            <Style TargetType="Editor">
                <Setter Property="PlaceholderColor" Value="{DynamicResource SecondaryTextColor}"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="TextColor" Value="{DynamicResource IOSEntryTextColor}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
            <Style TargetType="Picker">
                <Setter Property="TextColor" Value="{DynamicResource IOSEntryTextColor}"/>
                <Setter Property="TitleColor" Value="{DynamicResource SecondaryTextColor}"/>
            </Style>
        </ResourceDictionary>
        <ResourceDictionary x:Name="Android">
            <Style TargetType="Entry">
                <Setter Property="PlaceholderColor" Value="{DynamicResource SecondaryTextColor}"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
            <Style TargetType="Editor">
                <Setter Property="PlaceholderColor" Value="{DynamicResource SecondaryTextColor}"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
            <Style TargetType="Picker">
                <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}"/>
                <Setter Property="TitleColor" Value="{DynamicResource SecondaryTextColor}"/>
            </Style>
        </ResourceDictionary>
        <ResourceDictionary>
            <Color x:Key="Primary">#2196F3</Color>
            <Style TargetType="Button">
                <Setter Property="TextColor" Value="{DynamicResource ButtonTextColor}"/>
                <Setter Property="BorderColor" Value="{DynamicResource ButtonBorder}"/>
                <Setter Property="BorderWidth" Value="1"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{DynamicResource PrimaryColor}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{DynamicResource DisabledButtonBackground}"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <Style TargetType="ContentPage" ApplyToDerivedTypes="True">
                <Setter Property="BackgroundColor" Value="{DynamicResource PageBackgroundColor}"/>
            </Style>

            <Style TargetType="ListView">
                <Setter Property="BackgroundColor" Value="Transparent"/>
            </Style>
            <Style TargetType="Frame">
                <Setter Property="BackgroundColor" Value="Transparent"/>
            </Style>

            <local:NullBoolConverter x:Key="NullBoolConverter"/>
            <local:StringNullOrEmptyBoolConverter x:Key="StringNullOrEmptyConverter"/>
            <local:EqualsConverter x:Key="EqualsConverter"/>
            <local:NotEqualsConverter x:Key="NotEqualsConverter"/>
            <local:NegateConverter x:Key="NegateConverter"/>
            <local:GreaterThanZeroConverter x:Key="GreaterThanZeroConverter" />
            <local:LocalTimeConverter x:Key="LocalTimeConverter"/>
        </ResourceDictionary>
        <ResourceDictionary>
            <OnPlatform x:TypeArguments="x:String" x:Key="FontAwesomeBrands">
                <On Platform="Android" Value="FontAwesome6Brands.otf#Regular" />
                <On Platform="iOS" Value="FontAwesome6Brands-Regular" />
                <On Platform="UWP" Value="/Assets/FontAwesome6Brands.otf#Font Awesome 6 Brands" />
            </OnPlatform>

            <OnPlatform x:TypeArguments="x:String" 
                x:Key="FontAwesomeSolid">
                <On Platform="Android" Value="FontAwesome6Solid.otf#Regular" />
                <On Platform="iOS" Value="FontAwesome6Free-Solid" />
                <On Platform="UWP" Value="/Assets/FontAwesome6Solid.otf#Font Awesome 6 Free" />
            </OnPlatform>

            <OnPlatform x:TypeArguments="x:String" 
                x:Key="FontAwesomeRegular">
                <On Platform="Android" Value="FontAwesome6Regular.otf#Regular" />
                <On Platform="iOS" Value="FontAwesome6Free-Regular" />
                <On Platform="UWP" Value="/Assets/FontAwesome6Regular.otf#Font Awesome 6 Free" />
            </OnPlatform>
        </ResourceDictionary>
    </Application.Resources>
</Application>
